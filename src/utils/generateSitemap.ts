import { formatDate } from "./formatDate";

interface Router {
  path: string;
  changefreq: string;
  priority: string;
}

export const generateSitemapGenerator = (baseUrl: string, routers: Router[]): string => {
  const currentDate = new Date();
  const sitemap = `<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="/sitemap.xsl"?>
  <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
      ${routers
        .map(
          (router) => `
          <url>
            <loc>${baseUrl}${router.path}</loc>
            <lastmod>${formatDate(currentDate)}</lastmod>
            <changefreq>${router.changefreq}</changefreq>
            <priority>${router.priority}</priority>
          </url>
        `
        )
        .join("")}
    </urlset>
    <!-- XML Sitemap generated by İlyas Bozdemir ilyasbozdemir.dev   V1.0.0 -->
    `;
  return sitemap;
};

export const generateSitemapIndexGenerator = (baseUrl: string, sitemapList: { fileName: string }[]): string => {
  const currentDate = new Date();
  const sitemapIndex = `<?xml version="1.0" encoding="UTF-8"?>
    <?xml-stylesheet type="text/xsl" href="/sitemap-index.xsl"?>
    <sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
      ${sitemapList
        .map((sitemap) => {
          return `
          <sitemap>
            <loc>${baseUrl}${sitemap.fileName}</loc>
            <lastmod>${formatDate(currentDate)}</lastmod>
          </sitemap>
          `;
        })
        .join("")}
    </sitemapindex>
    <!-- XML Sitemap generated by İlyas Bozdemir ilyasbozdemir.dev   V1.0.0 -->
  `;
  return sitemapIndex;
};
